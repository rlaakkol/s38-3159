# Specification

# Implementation

## pubsub.jsonish

## pubsub.protocol
* Sequence wraparound
* Handling of responses to noack messages? Shouldn't happen, but currently just silently dropped
* Colesce retry of pending response into ack for old sequence for three-way exchanges
** server recv seq=X -> send seq=Y ack=X
*** send packet lost
** client times out -> retry seq=X
** server recv seq=X -> send ack=X
** server times out -> retry seq=Y
*** could instead bundle the pending retry of seq=Y into the ack=X message..

## pubsub.server
* sensor timeouts
** remove sensor from client subscriptions if no updates within 60s
* client aggregation expressions
** refactor to separate ServerAggregation object to support multiple aggregations per client
** cleanup code
* client keepalives
** change to use Session timeout logic
** implement keepalive timeout in Server poll_timeouts(), not in send_publish()
** XXX: current keepalives don't work for empty subscription sets / no publishes
* fix timeout on empty subscribe set
** initialize ServerClient state to send keepalives

## pubsub.client
* PUBLISH responses
** transmit info about received messages..?

