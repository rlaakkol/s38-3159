#!/usr/bin/env python3

import argparse
import logging; log = logging.getLogger('ps-client')

import pubsub.args
import pubsub.client

def main (args):
    """
        Publish-Subscribe client.
    """

    parser = argparse.ArgumentParser(description=__doc__)

    pubsub.args.parser(parser)
    pubsub.logger.parser(parser, component='client')
    
    parser.add_argument('-s', '--server-ip', metavar='IP', required=True,
            help="Publish server address")
    parser.add_argument('-p', '--server-port', metavar='PORT', required=True,
            help="Publish server port")
    parser.add_argument('-L', '--list', action='store_true',
            help="Query for available sensors")

    parser.add_argument('sensors', metavar='SENSOR', nargs='*',
            help="Sensors to subscribe to")

    args = parser.parse_args(args)
    
    pubsub.args.apply(args)
    loggers = pubsub.logger.apply(args)

    # client
    client = pubsub.client.Client(
            args.server_ip,
            args.server_port,
            loggers,
    )
    
    try:
        if args.list:
            # query
            for sensor in client.query():
                print(sensor)

        if not args.list or args.sensors:

            if args.sensors:
                sub = client.subscribe(args.sensors)
            else:
                sub = client.subscribe()

            # subscribe -> publish
            for type, id, update in sub:
                print("{type}\t{id}\t{value}".format(type=type, id=id, value=update[type]))

    except KeyboardInterrupt:
        log.error("exit on KeyboardInterrupt")
        return 0

    else:
        return 0

    finally:
        loggers.close()

if __name__ == '__main__':
    pubsub.args.main(main)
